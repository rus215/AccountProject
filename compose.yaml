version: '3.8'
services:
  app:
    build:
      context: .
    container_name: app
    restart: on-failure
    ports:
      - "8080:8080"
    networks:
      - spring-postgres
    depends_on:
      - db
      - kafka
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/account_db

  db:
    image: 'postgres:16-alpine'
    container_name: db
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - spring-postgres
    environment:
      - POSTGRES_USER=account_db
      - POSTGRES_PASSWORD=mysecretpassword

  pgadmin:
    container_name: pg_admin
    image: dpage/pgadmin4:7
    restart: always
    networks:
      - spring-postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - spring-postgres
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - spring-postgres
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    networks:
      - spring-postgres
    depends_on:
      - kafka
    ports:
      - 8082:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
volumes:
  db-data:
  pgadmin-data:
networks:
  spring-postgres: